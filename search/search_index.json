{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Accelerated WEKA - easy GPU support using WEKA Accelerated WEKA unifies the WEKA software , a well-known and open-source Java software, with new technologies that leverage the GPU to shorten the execution time of ML algorithms. It has two benefits aimed at users without expertise in system configuration and coding: an easy installation and a GUI that guides the configuration and execution of the ML tasks. Accelerated WEKA is a collection of packages available for WEKA (e.g., WDL4J , wekaPython , and wekaRAPIDS ). Accelerated WEKA can be easiy installed and anyone can extend it to support new tools and algorithms. Easy to install and use One of the best features of Accelerated WEKA is the installation method, which helps users without expertise in system configuration to bypass such issues as setting up different dependencies and environment variables. In addition, everything is accessible via the Weka GUI, the commandline and programmatically in Java. Check the Getting Started and the Examples sections.","title":"Home"},{"location":"#accelerated-weka-easy-gpu-support-using-weka","text":"Accelerated WEKA unifies the WEKA software , a well-known and open-source Java software, with new technologies that leverage the GPU to shorten the execution time of ML algorithms. It has two benefits aimed at users without expertise in system configuration and coding: an easy installation and a GUI that guides the configuration and execution of the ML tasks. Accelerated WEKA is a collection of packages available for WEKA (e.g., WDL4J , wekaPython , and wekaRAPIDS ). Accelerated WEKA can be easiy installed and anyone can extend it to support new tools and algorithms.","title":"Accelerated WEKA - easy GPU support using WEKA"},{"location":"#easy-to-install-and-use","text":"One of the best features of Accelerated WEKA is the installation method, which helps users without expertise in system configuration to bypass such issues as setting up different dependencies and environment variables. In addition, everything is accessible via the Weka GUI, the commandline and programmatically in Java. Check the Getting Started and the Examples sections.","title":"Easy to install and use"},{"location":"about/","text":"","title":"About"},{"location":"Introduction/examples/","text":"","title":"Examples"},{"location":"Introduction/getting_started/","text":"","title":"Getting started"},{"location":"Introduction/installation/","text":"Installation Accelerated WEKA was designed to provide an easy installation process. It can be done via the conda work with Python 3.8 and above. Installation can be done via pip : Accelerated WEKA simplifies the installation process by using the conda environment , making straightforward to use it from the beginning. Once you have conda installed, Accelerated WEKA can be installed by issuing the following command: conda create -n accelweka -c rapidsai -c nvidia -c conda-forge -c waikato weka Conda will take care of the configuration of dependencies, and after finishing the installation, you can start using Accelerated WEKA immediately by activating the newly created environment. conda activate accelweka And finally, launching WEKA GUI weka Alternatively, you can run stuff from the command line: weka -main weka.Run .RandomRBF -n 100000 -a 500 > RBFa500n100k.arff weka -memory 48g -main weka.Run weka.classifiers.rapids.CuMLClassifier -split-percentage 80 -learner RandomForestClassifier -t $(pwd)/RBFa5kn1k.arff -py-command python Or Programatically through Java. Feel welcome to open an issue on GitHub if you are having any trouble.","title":"Installation"},{"location":"Introduction/installation/#installation","text":"Accelerated WEKA was designed to provide an easy installation process. It can be done via the conda work with Python 3.8 and above. Installation can be done via pip : Accelerated WEKA simplifies the installation process by using the conda environment , making straightforward to use it from the beginning. Once you have conda installed, Accelerated WEKA can be installed by issuing the following command: conda create -n accelweka -c rapidsai -c nvidia -c conda-forge -c waikato weka Conda will take care of the configuration of dependencies, and after finishing the installation, you can start using Accelerated WEKA immediately by activating the newly created environment. conda activate accelweka And finally, launching WEKA GUI weka Alternatively, you can run stuff from the command line: weka -main weka.Run .RandomRBF -n 100000 -a 500 > RBFa500n100k.arff weka -memory 48g -main weka.Run weka.classifiers.rapids.CuMLClassifier -split-percentage 80 -learner RandomForestClassifier -t $(pwd)/RBFa5kn1k.arff -py-command python Or Programatically through Java. Feel welcome to open an issue on GitHub if you are having any trouble.","title":"Installation"}]}